name: Rust Code Quality

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Build code
      run: cargo build --all --release
      working-directory: role-manager
      continue-on-error: true
      id: rsbuild
      
    - name: Format code with Rustfmt
      run: cargo fmt --all -- --check
      working-directory: role-manager
      continue-on-error: true
      id: rustfmt

    - name: Run Clippy
      run: cargo clippy --all -- -D warnings
      working-directory: role-manager
      continue-on-error: true
      id: clippy

    - name: Build and run tests
      run: cargo test --all
      working-directory: role-manager
      continue-on-error: true
      id: tests

    - name: Check errors and set workflow status
      run: |
        if [[ ${{ steps.rsbuild.outcome }} == 'failure' ]]; then
          echo "Error: Rustfmt failed."
          exit 1
        fi
        if [[ ${{ steps.rustfmt.outcome }} == 'failure' ]]; then
          echo "Error: Rustfmt failed."
          exit 1
        fi
        if [[ ${{ steps.clippy.outcome }} == 'failure' ]]; then
          echo "Error: Clippy failed."
          exit 1
        fi
        if [[ ${{ steps.tests.outcome }} == 'failure' ]]; then
          echo "Error: Tests failed."
          exit 1
        fi
      if: ${{ always() }}
