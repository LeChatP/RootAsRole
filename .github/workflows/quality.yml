# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow checks out code, performs a Codacy security scan
# and integrates the results with the
# GitHub Advanced Security code scanning feature.  For more information on
# the Codacy security scan action usage and parameters, see
# https://github.com/codacy/codacy-analysis-cli-action.
# For more information on Codacy Analysis CLI in general, see
# https://github.com/codacy/codacy-analysis-cli.

name: Quality Gates

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

permissions:
  contents: read

jobs:

  rust-quality-gate:
    name: Rust Quality Gate
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read 
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af #@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true
      
      - name: Cargo audit
        run: cargo audit --json | tee cargo-audit.json
        id: cargo-audit
      
      - name: Build code
        run: cargo build --all --release

      - name: Format code with Rustfmt
        run: cargo fmt --all -- --check
        continue-on-error: true
      
      - name: Install required cargo
        run: cargo install clippy-sarif sarif-fmt

      - name: Run rust-clippy
        run:
          cargo clippy --all-features --message-format=json | clippy-sarif | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: ./rust-clippy-results.sarif
          wait-for-processing: true